version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: backend_dev
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: 1973
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser -d backend_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile
    ports:
      - "8080:8080"
    environment:
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: devuser
      DB_PASSWORD: 1973
      DB_NAME: backend_dev
      DB_SSLMODE: disable
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      REDIS_DB: 0
      
      # SMS Configuration (Africa's Talking Sandbox)
      SMS_BASE_URL: https://api.sandbox.africastalking.com/version1
      SMS_IS_SANDBOX: "true"
      SMS_RETRY_LIMIT: 3
      # SMS_USERNAME: ${SMS_USERNAME}
      # SMS_API_KEY: ${SMS_API_KEY}
      # SMS_SHORTCODE: ${SMS_SHORTCODE}
      
      # OIDC Configuration (optional)
      # OIDC_ISSUER_URL: ${OIDC_ISSUER_URL}
      # OIDC_CLIENT_ID: ${OIDC_CLIENT_ID}
      # OIDC_CLIENT_SECRET: ${OIDC_CLIENT_SECRET}
      # OIDC_REDIRECT_URL: http://localhost:8080/auth/callback
      # OIDC_SCOPES: profile,email,customers:read,customers:write,orders:read,orders:write
      
      # Server
      ENVIRONMENT: development
      PORT: 8080
      LOG_LEVEL: info
      
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: